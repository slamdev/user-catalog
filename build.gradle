import org.gradle.profile.BuildProfile
import org.gradle.profile.ProfileReportRenderer
import org.gradle.profile.ReportGeneratingProfileListener

import java.time.Instant

import static java.lang.System.getenv

buildscript {
    repositories {
        mavenCentral()
        maven { url 'http://repo.spring.io/plugins-release' }
    }
    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.4.0.RELEASE'
        classpath 'org.springframework:springloaded:1.2.6.RELEASE'
        classpath 'org.springframework.build.gradle:propdeps-plugin:0.0.7'
    }
}

plugins {
    id 'base'
    id 'idea'
}

group 'com.github.slamdev'
version '1.0.0-SNAPSHOT'

ext {
    timestamp = Instant.now().toEpochMilli()
    buildNumber = getenv('TRAVIS_BUILD_NUMBER') ?: 'local'
}

idea {
    project {
        ipr {
            withXml { provider ->
                def projectXml = provider.asNode()
                def compilerConfiguration = projectXml.component.find { component ->
                    component.'@name' == 'CompilerConfiguration'
                }
                def currentAnnotationProcessing = compilerConfiguration.annotationProcessing
                currentAnnotationProcessing.replaceNode {
                    annotationProcessing {
                        profile(name: 'Default', default: true, enabled: true) {
                            processorPath(useClasspath: true)
                        }
                    }
                }
            }
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.14.1'
}

gradle.addBuildListener(new ReportGeneratingProfileListener() {
    void buildFinished(BuildProfile buildProfile) {
        ProfileReportRenderer renderer = new ProfileReportRenderer()
        File file = file("${rootProject.buildDir}/reports/profile/profile.html")
        renderer.writeTo(buildProfile, file)
    }
})

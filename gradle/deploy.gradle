task remoteDeploy << {
    def hosts = deployHost()
    if (hosts in String) {
        hosts = [hosts]
    }
    hosts.eachWithIndex { deployHost, idx ->
        remotes.create("config-$idx") {
            host = deployHost
            user = deployUser
            identity = file(deployKey)
            knownHosts = allowAnyHosts
        }
    }
    logger.quiet("Remotes are $remotes")
    String profiles = project.hasProperty('springProfiles') ? '--spring.profiles.active=' + springProfiles.join(',') : []
    logger.quiet("Spring profiles to be used: $profiles")
    ssh.run {
        session(remotes) {
            logger.quiet('Stopping previous application')
            execute 'if pgrep java &> /dev/null ; then killall -9 java ; fi'
            logger.quiet('Uploading new application')
            put from: file("${jar.archivePath}"), into: '/tmp'
            logger.quiet('Starting new application')
            execute "java -jar /tmp/${jar.archiveName} ${profiles} > /dev/null 2>&1 &"
        }
    }
}

remoteDeploy.dependsOn assemble
